import java.util.*;

class Peak {


    static int findPeak(int arr[], int n) {
        // If the array has only one element, it is considered a peak point
        if (n == 1)
            return 0;
        
        // Check if the first element is a peak point
        if (arr[0] >= arr[1])
            return 0;
        
        // Check if the last element is a peak point
        if (arr[n - 1] >= arr[n - 2])
            return n - 1;
        
        // Iterate through the array to find a peak point
        for (int i = 1; i < n - 1; i++) {
            // Check if the current element is greater than or equal to its neighbors
            if (arr[i] >= arr[i - 1] && arr[i] >= arr[i + 1])
                return i;
        }
        
        // If no peak point is found, return 0
        return 0;
    }

    public static void main(String[] args) {
        // Create a Scanner object to read user input
        Scanner sc = new Scanner(System.in);
        
        // Prompt the user to enter the number of elements in the array
        System.out.print("Enter the number of elements in the array: ");
        int n = sc.nextInt();
        
        // Create an array of size n
        int arr[] = new int[n];
        
        // Prompt the user to enter the elements of the array
        System.out.println("Enter the elements of the array: ");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        
        // Find and print the index of a peak point
        System.out.print("Index of a peak point is " + findPeak(arr, n));
    }
}
